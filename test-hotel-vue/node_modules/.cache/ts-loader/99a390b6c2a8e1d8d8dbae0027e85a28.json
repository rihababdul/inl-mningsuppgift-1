{"remainingRequest":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/thread-loader/dist/cjs.js!/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/babel-loader/lib/index.js!/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/ts-loader/index.js??ref--13-3!/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/src/views/Client.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/src/views/Client.vue","mtime":1602611297000},{"path":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/cache-loader/dist/cjs.js","mtime":1602611297000},{"path":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/thread-loader/dist/cjs.js","mtime":1602611297000},{"path":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/babel-loader/lib/index.js","mtime":1602611297000},{"path":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/ts-loader/index.js","mtime":1602611297000},{"path":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/cache-loader/dist/cjs.js","mtime":1602611297000},{"path":"/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/vue-loader/lib/index.js","mtime":1602611297000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rihab/Desktop/Inlämningsuppgift-01/test-hotel-vue/src/views/Client.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;AACA,SAAS,SAAT,EAAoB,GAApB,EAAyB,KAAzB,QAAsC,wBAAtC;AACA,SAAS,aAAT,EAAwB,SAAxB,EAAmC,YAAnC,EAAiD,UAAjD,EAA6D,YAA7D,QAAiF,gBAAjF;AACA,SAAS,aAAT,QAA8B,qBAA9B;AACA,OAAO,OAAP,MAAoB,0BAApB;AACA,OAAO,QAAP,MAAqB,2BAArB;;AAOA,IAAqB,MAArB;AAAA;;AAAA;;AAAA,oBAAA;AAAA;;AAAA;;;AACQ,UAAA,OAAA,GAAmB,KAAnB;AACA,UAAA,MAAA,GAAkB,KAAlB;AACA,UAAA,QAAA,GAAoB,KAApB;AACA,UAAA,MAAA,GAAS,IAAT;AACA,UAAA,MAAA,GAAmB,EAAnB;AACA,UAAA,KAAA,GAAiB,KAAjB;AANR;AA6EC;;AA7ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASM,aAAa,EATnB;AAAA;AAAA;AAAA;;AAAA,sBAUO,KAAK,IAAL,KAAc,QAVrB;AAAA;AAAA;AAAA;;AAWI,qBAAK,MAAL,GAAc,EAAd;AAXJ;AAAA;;AAAA;AAaI,qBAAK,OAAL,GAAe,IAAf;AAbJ;AAAA,uBAcwB,SAAS,CAAC,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAApB,CAdjC;;AAAA;AAcI,qBAAK,MAdT;AAeI,qBAAK,OAAL,GAAe,KAAf;;AAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAwBgB;AACd,WAAK,MAAL,GAAc,EAAd;;AAEA,UAAI,CAAC,KAAK,MAAL,CAAY,IAAb,IAAqB,KAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB,KAA4B,CAArD,EAAwD;AACvD,aAAK,MAAL,CAAY,IAAZ,CAAiB,kBAAjB;AACA,OAFD,MAEO,IAAI,KAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB,GAA0B,EAA9B,EAAkC;AACxC,aAAK,MAAL,CAAY,IAAZ,CAAiB,2CAAjB;AACA;;AAED,UAAI,CAAC,KAAK,MAAL,CAAY,KAAb,IAAsB,KAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,KAA6B,CAAvD,EAA0D;AACzD,aAAK,MAAL,CAAY,IAAZ,CAAiB,mBAAjB;AACA,OAFD,MAEO,IAAI,KAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB,GAA0B,GAA9B,EAAmC;AACzC,aAAK,MAAL,CAAY,IAAZ,CAAiB,6CAAjB;AACA,OAFM,MAEA,IAAI,CAAC,aAAa,CAAC,KAAK,MAAL,CAAY,KAAb,CAAlB,EAAuC;AAC7C,aAAK,MAAL,CAAY,IAAZ,CAAiB,4BAAjB;AACA;;AAED,UAAI,CAAC,KAAK,MAAL,CAAY,SAAb,IAA0B,KAAK,MAAL,CAAY,SAAZ,CAAsB,MAAtB,KAAiC,CAA/D,EAAkE;AACjE,aAAK,MAAL,CAAY,IAAZ,CAAiB,uBAAjB;AACA,OAFD,MAEO,IAAI,KAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB,GAA0B,EAA9B,EAAkC;AACxC,aAAK,MAAL,CAAY,IAAZ,CAAiB,gDAAjB;AACA;;AAED,aAAO,KAAK,MAAL,CAAY,MAAZ,KAAuB,CAA9B;AACA;AAhDF;AAAA;AAAA,kCAmDoB;AAClB,UAAI,KAAK,KAAT,EAAgB;AACf,aAAK,OAAL;AACA;AACD;AAvDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DE,qBAAK,KAAL,GAAa,IAAb;;AA1DF,oBA2DO,KAAK,OAAL,EA3DP;AAAA;AAAA;AAAA;;AAAA,kDA4DU,KA5DV;;AAAA;AA8DE,qBAAK,MAAL,GAAc,IAAd;;AA9DF,sBA+DM,KAAK,IAAL,KAAc,QA/DpB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAgEuB,YAAY,CAAC,KAAK,MAAN,CAhEnC;;AAAA;AAgEG,qBAAK,MAhER;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAkEuB,UAAU,CAAC,KAAK,MAAL,CAAY,EAAb,EAAiB,KAAK,MAAtB,CAlEjC;;AAAA;AAkEG,qBAAK,MAlER;;AAAA;AAoEE,qBAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB;;AApEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwEE,qBAAK,QAAL,GAAgB,IAAhB;AAxEF;AAAA,uBAyEQ,YAAY,CAAC,KAAK,MAAL,CAAY,EAAb,CAzEpB;;AAAA;AA0EE,qBAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB;;AA1EF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAoBgB;AACd,aAAO,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAAnB,KAA0B,KAA1B,GAAkC,QAAlC,GAA6C,MAApD;AACA;AAtBF;;AAAA;AAAA,EAAoC,GAApC,CAAA;;AAmDC,UAAA,CAAA,CADC,KAAK,CAAC,QAAD,EAAW;AAAE,EAAA,IAAI,EAAE;AAAR,CAAX,CACN,CAAA,E,gBAAA,E,aAAA,EAIC,IAJD,CAAA;;AAnDoB,MAAM,GAAA,UAAA,CAAA,CAH1B,SAAS,CAAC;AACV,EAAA,UAAU,EAAE;AAAE,IAAA,OAAO,EAAP,OAAF;AAAW,IAAA,QAAQ,EAAR;AAAX;AADF,CAAD,CAGiB,CAAA,EAAN,MAAM,CAAN;eAAA,M","sourcesContent":["\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { checkLoggedIn, getClient, createClient, editClient, deleteClient } from '@/services/api'\nimport { validateEmail } from '@/services/validate'\nimport Loading from '@/components/Loading.vue'\nimport CheckBox from '@/components/CheckBox.vue'\n\n\n\n@Component({\n\tcomponents: { Loading, CheckBox }\n})\nexport default class Client extends Vue {\n\tpublic loading: boolean = false\n\tpublic saving: boolean = false\n\tpublic deleting: boolean = false\n\tpublic client = null\n\tpublic errors: string[] = []\n\tpublic dirty: boolean = false\n\n\tprivate async created() {\n\t\tif (checkLoggedIn()) {\n\t\t\tif (this.mode === 'create') {\n\t\t\t\tthis.client = {}\n\t\t\t} else {\n\t\t\t\tthis.loading = true\n\t\t\t\tthis.client = await getClient(this.$route.params.id)\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get mode() {\n\t\treturn this.$route.params.id === 'new' ? 'create' : 'edit'\n\t}\n\n\tprivate valiate() {\n\t\tthis.errors = []\n\n\t\tif (!this.client.name || this.client.name.length === 0) {\n\t\t\tthis.errors.push('Name must be set')\n\t\t} else if (this.client.name.length > 50) {\n\t\t\tthis.errors.push('Name can not be longer than 50 characters')\n\t\t}\n\n\t\tif (!this.client.email || this.client.email.length === 0) {\n\t\t\tthis.errors.push('Email must be set')\n\t\t} else if (this.client.name.length > 200) {\n\t\t\tthis.errors.push('Email can not be longer than 200 characters')\n\t\t} else if (!validateEmail(this.client.email)) {\n\t\t\tthis.errors.push('Email address is not valid')\n\t\t}\n\n\t\tif (!this.client.telephone || this.client.telephone.length === 0) {\n\t\t\tthis.errors.push('Telephone must be set')\n\t\t} else if (this.client.name.length > 50) {\n\t\t\tthis.errors.push('Telephone can not be longer than 50 characters')\n\t\t}\n\n\t\treturn this.errors.length === 0\n\t}\n\n\t@Watch('client', { deep: true })\n\tprivate clearErrors() {\n\t\tif (this.dirty) {\n\t\t\tthis.valiate()\n\t\t}\n\t}\n\n\tpublic async save() {\n\t\tthis.dirty = true\n\t\tif (!this.valiate()) {\n\t\t\treturn false\n\t\t}\n\t\tthis.saving = true\n\t\tif (this.mode === 'create') {\n\t\t\tthis.client = await createClient(this.client)\n\t\t} else {\n\t\t\tthis.client = await editClient(this.client.id, this.client)\n\t\t}\n\t\tthis.$router.push('/clients')\n\t}\n\n\tpublic async remove() {\n\t\tthis.deleting = true\n\t\tawait deleteClient(this.client.id)\n\t\tthis.$router.push('/clients')\n\t}\n\n}\n"],"sourceRoot":""}]}